{"ast":null,"code":"export class CustomValidators {\n  static invalidProjectName(control) {\n    if (control.value === 'Test') {\n      return {\n        'invalidProjectName': true\n      };\n    }\n\n    return null;\n  }\n\n  static asyncInvalidProjectName(control) {\n    const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (control.value === 'Testproject') {\n          resolve({\n            'invalidProjectName': true\n          });\n        } else {\n          resolve(null);\n        }\n      }, 2000);\n    });\n    return promise;\n  }\n\n}","map":{"version":3,"mappings":"AAGA,OAAM,MAAOA,gBAAP,CAAuB;EACA,OAAlBC,kBAAkB,CAACC,OAAD,EAAoB;IACzC,IAAIA,OAAO,CAACC,KAAR,KAAkB,MAAtB,EAA8B;MAC1B,OAAO;QAAC,sBAAsB;MAAvB,CAAP;IACH;;IACD,OAAO,IAAP;EACH;;EAE6B,OAAvBC,uBAAuB,CAACF,OAAD,EAAqB;IAChD,MAAMG,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAoB;MAC/CC,UAAU,CAAC,MAAK;QACd,IAAIP,OAAO,CAACC,KAAR,KAAkB,aAAtB,EAAqC;UACnCI,OAAO,CAAC;YAAC,sBAAsB;UAAvB,CAAD,CAAP;QACD,CAFD,MAEM;UACJA,OAAO,CAAE,IAAF,CAAP;QACD;MACF,CANS,EAMP,IANO,CAAV;IAOD,CARgB,CAAhB;IASD,OAAOF,OAAP;EACD;;AAnBwB","names":["CustomValidators","invalidProjectName","control","value","asyncInvalidProjectName","promise","Promise","resolve","reject","setTimeout"],"sourceRoot":"","sources":["/Users/nataliiaodai/Documents/all/angular_draft/src/app/assignment/custom-validators.ts"],"sourcesContent":["import {  FormControl } from \"@angular/forms\";\nimport { Observable } from \"rxjs\";\n\nexport class CustomValidators {\n    static invalidProjectName(control:FormControl): {[s: string]: boolean} {\n        if (control.value === 'Test') {\n            return {'invalidProjectName': true};\n        }\n        return null;\n    }\n\n    static asyncInvalidProjectName(control: FormControl): Promise<any> | Observable<any>{\n       const promise = new Promise((resolve, reject) => {\n        setTimeout(() => {\n          if (control.value === 'Testproject') {\n            resolve({'invalidProjectName': true});\n          }else {\n            resolve (null);\n          }\n        }, 2000);\n      });\n      return promise;\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}